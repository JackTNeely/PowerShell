$Password = Read-Host "Enter a unique password to access certificates if recovery from backup is needed"; Get-ExchangeCertificate | ForEach-Object { $Thumbprint = $_.Thumbprint; $FilePath = "$env:userprofile\Desktop\Backups\Certificate-$Thumbprint.pfx"; $CertBytes = $_.Export("Pfx", $Password); [System.IO.File]::WriteAllBytes($FilePath, $CertBytes) }


$Password = Read-Host "Enter a password for the exported certificates" -AsSecureString; Get-ExchangeCertificate | ForEach-Object { $Thumbprint = $_.Thumbprint; $CertBytes = $_.Export("Pfx", $Password); $Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2($CertBytes, $Password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable); [System.IO.File]::WriteAllBytes("$env:userprofile\Desktop\Backups\Certificates\$Thumbprint.pfx", $Cert.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12, $Password)) }

$Password = Read-Host "Enter a password for the exported certificates" -AsSecureString
$Certificates = Get-ExchangeCertificate
ForEach ($Certificate in $Certificates) {
    $Thumbprint = $Certificate.Thumbprint
    $FilePath = "$env:userprofile\Desktop\Backups\Certificates\$Thumbprint.pfx"
    $CertBytes = $Certificate.Certificate.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pfx, $Password)
    $Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
    $Cert.Import($CertBytes, $Password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)
    [System.IO.File]::WriteAllBytes($FilePath, $CertBytes)
}
